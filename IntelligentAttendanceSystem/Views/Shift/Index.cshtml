@model IEnumerable<Shift>
@{
    ViewData["Title"] = "Manage Shifts";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Shifts Management</h3>
                <div class="card-tools">
                    <div class="input-group input-group-sm" style="width: 200px;">
                        <input type="text" id="searchInput" class="form-control float-right" placeholder="Search shifts...">
                        <div class="input-group-append">
                            <button type="button" class="btn btn-default">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <a asp-action="Create" class="btn btn-primary btn-sm ml-2">
                        <i class="fas fa-plus"></i> New Shift
                    </a>
                    <a asp-action="AssignShift" class="btn btn-success btn-sm ml-1">
                        <i class="fas fa-users"></i> Assign Shift
                    </a>
                </div>
            </div>
            <div class="card-body">
                <!-- Status Filter -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-outline-primary active">
                                <input type="radio" name="statusFilter" value="all" checked> All
                            </label>
                            <label class="btn btn-outline-success">
                                <input type="radio" name="statusFilter" value="active"> Active
                            </label>
                            <label class="btn btn-outline-secondary">
                                <input type="radio" name="statusFilter" value="inactive"> Inactive
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6 text-right">
                        <div class="btn-group">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                                <i class="fas fa-download"></i> Export
                            </button>
                            <div class="dropdown-menu dropdown-menu-right">
                                <a class="dropdown-item" href="#" onclick="exportTableToCSV()">Export to CSV</a>
                                <a class="dropdown-item" href="#" onclick="window.print()">Print</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Messages -->
                @await Html.PartialAsync("_AlertMessages")

                <table class="table table-bordered table-hover" id="shiftsTable">
                    <thead class="thead-dark">
                        <tr>
                            <th data-sort="name">Shift Name <i class="fas fa-sort"></i></th>
                            <th data-sort="code">Code <i class="fas fa-sort"></i></th>
                            <th data-sort="start">Start Time <i class="fas fa-sort"></i></th>
                            <th data-sort="relax">Relax Time <i class="fas fa-sort"></i></th>
                            <th data-sort="off">Off Time <i class="fas fa-sort"></i></th>
                            <th data-sort="total">Total Hours <i class="fas fa-sort"></i></th>
                            <th data-sort="status">Status <i class="fas fa-sort"></i></th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var shift in Model)
                        {
                            <tr data-status="@(shift.IsActive ? "active" : "inactive")">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="mr-3">
                                            <i class="fas fa-clock fa-2x text-primary"></i>
                                        </div>
                                        <div>
                                            <strong>@shift.ShiftName</strong>
                                            @if (!string.IsNullOrEmpty(shift.Description))
                                            {
                                                <br />
                                                <small class="text-muted">@shift.Description</small>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td><code>@shift.ShiftCode</code></td>
                                <td>@shift.StartTime.ToString(@"hh\:mm")</td>
                                <td>@shift.RelaxTime.ToString(@"hh\:mm")</td>
                                <td>@shift.OffTime.ToString(@"hh\:mm")</td>
                                <td>
                                    <span class="badge bg-info">@shift.TotalHours.ToString(@"hh\:mm")</span>
                                </td>
                                <td>
                                    @if (shift.IsActive)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle"></i> Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="fas fa-pause-circle"></i> Inactive
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group-vertical btn-group-sm">
                                        <a asp-action="Edit" asp-route-id="@shift.ShiftId"
                                           class="btn btn-outline-primary btn-sm mb-1">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>

                                        @if (shift.IsActive)
                                        {
                                            <form asp-action="Deactivate" asp-route-id="@shift.ShiftId" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-outline-warning btn-sm mb-1"
                                                        onclick="return confirm('Deactivate this shift?')">
                                                    <i class="fas fa-pause"></i> Deactivate
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <form asp-action="Activate" asp-route-id="@shift.ShiftId" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-outline-success btn-sm mb-1">
                                                    <i class="fas fa-play"></i> Activate
                                                </button>
                                            </form>
                                        }

                                        <form asp-action="Delete" asp-route-id="@shift.ShiftId" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-danger btn-sm"
                                                    onclick="return confirm('Are you sure you want to delete this shift?')">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('#shiftsTable tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Status filter functionality
            $('input[name="statusFilter"]').change(function() {
                var filter = $(this).val();
                $('#shiftsTable tbody tr').each(function() {
                    if (filter === 'all') {
                        $(this).show();
                    } else {
                        $(this).toggle($(this).data('status') === filter);
                    }
                });
            });

            // Simple sorting functionality
            $('th[data-sort]').click(function() {
                var table = $(this).parents('table').eq(0);
                var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));
                this.asc = !this.asc;
                if (!this.asc) {
                    rows = rows.reverse();
                }
                for (var i = 0; i < rows.length; i++) {
                    table.append(rows[i]);
                }
            });

            function comparer(index) {
                return function(a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }
        });

        function exportTableToCSV() {
            var csv = [];
            var rows = document.querySelectorAll("table tr");

            for (var i = 0; i < rows.length; i++) {
                var row = [], cols = rows[i].querySelectorAll("td, th");

                for (var j = 0; j < cols.length - 1; j++) { // Skip actions column
                    row.push(cols[j].innerText);
                }

                csv.push(row.join(","));
            }

            downloadCSV(csv.join("\n"), "shifts.csv");
        }

        function downloadCSV(csv, filename) {
            var csvFile = new Blob([csv], {type: "text/csv"});
            var downloadLink = document.createElement("a");
            downloadLink.download = filename;
            downloadLink.href = window.URL.createObjectURL(csvFile);
            downloadLink.style.display = "none";
            document.body.appendChild(downloadLink);
            downloadLink.click();
        }
    </script>
}